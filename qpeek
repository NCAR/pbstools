#!/bin/bash

usage () {
cat << EOF
Usage: qpeek [-f] [JOBID] 

This command allows you to "peek" at the stdout log from a running
PBS job. If no job ID is given, a running job will be examined at random.

If you want to examine the stderr as well in a combined log, you will 
need to join the output and error logs using the "-j oe" option to qsub
at submission time.

Options:
    -e, --error     output stderr log instead of stdout
    -f, --follow    output appended data as the log grows
    -h, --help      display this help and exit
EOF
exit
}

CLOPT="$@"
READCMD=cat
LOGFILE=OU

# Parse command line arguments
for OPT in $CLOPT; do
	case $OPT in
		-e|--error)
			LOGFILE=ER
			;;
		-f|--follow)
			READCMD="tail --follow=name"
			;;
		-*)
			usage
			;;
		[0-9]*)
			JOBID=${OPT%%.*}
			;;
	esac
done

# Get random job if none selected, or make sure user owns job
if [[ -z $JOBID ]]; then
	JOBID=$(qstat -u $USER | awk '$10 == "R" {print($1);exit;}' | cut -d '.' -f 1)

	if [[ -z $JOBID ]]; then
		echo "No running jobs for user $USER detected. Exiting..."
		exit 2
	fi
else
	JOBSTAT=$(qstat -a -w ${JOBID} |& tail -1)

	if [[ ${PIPESTATUS[0]} != 0 ]]; then
		echo "No job with ID $JOBID currently running. Exiting..."
		exit 1
	else
		if [[ $USER != csgteam ]]; then
			if [[ $(echo $JOBSTAT | awk '{print ($2);}') != $USER ]]; then
				echo "Job $JOBID does not belong to $USER. Exiting..."
				exit 3
			fi
		fi
	fi
fi

# Get root node (MOM) from the job
IOMOM=$(qstat -n1 $JOBID | cut -d '/' -f 1)
IOMOM=${IOMOM##* }

# Pull log file content
READCMD="bash -c \"${READCMD} /var/spool/pbs/spool/${JOBID}.chadmin1.${LOGFILE} 2> /dev/null\""
ssh -t $IOMOM $READCMD 2> /dev/null
