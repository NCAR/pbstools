#!/bin/bash

# Here are the default settings at the moment
NODES=1
CPUS=1
MPIPROCS=1
QUEUE=share
WALLTIME=3600

usage () {
cat << EOF
Usage: qinteractive [PBS options] 

This command will start an interactive job on the share queue using one core
by default. Any arguments submitted to the script will be forwarded to the qsub
command, enabling you to override script defaults (e.g., walltime).

You have three ways of selecting an account to use for the submission:

1. Use the PBS -A [account] command line argument
2. Set the PBS_ACCOUNT environment variable
3. Let qinteractive randomly select from your active project list

Current PBS_ACCOUNT value = $PBS_ACCOUNT
EOF
exit
}

PBSOPT="$@"

# Parse command line arguments
for n in $PBSOPT; do
	case $n in
		--help)
			usage
			;;
		-A*)
			if [[ $n == -A ]]; then
				READVAL=account
			else
				JOB_ACCOUNT=${n/-A/}
			fi
			;;
		*)
			if [[ $READVAL == account ]]; then
				JOB_ACCOUNT=$n
				READVAL=
			fi
			;;
	esac
done

# If JOB_ACCOUNT is still not set, then use defaults
if [[ -z $JOB_ACCOUNT ]]; then
	if [[ -z $PBS_ACCOUNT ]]; then
		JOB_ACCOUNT=$(/ncar/opt/sam/sam_validate.py $USER | grep -m1 True | cut -d ',' -f 1)
	else
		JOB_ACCOUNT=$PBS_ACCOUNT
	fi

	PBSARGS="-A $JOB_ACCOUNT"
fi

# Create default list of arguments
PBSARGS="-I -l select=${NODES}:ncpus=${CPUS}:mpiprocs=${MPIPROCS}	\
			-l walltime=${WALLTIME} -q ${QUEUE} ${PBSARGS}"

echo -e "Submitting interactive job to PBS using account $JOB_ACCOUNT ...\n"

if [[ ! -z $PBSOPT ]]; then
	echo -e "Requested custom PBS options:\n    $PBSOPT\n"

	PBSARGS="$PBSARGS $PBSOPT"
fi

# Submit job request and put any user requests second to override defaults
qsub $PBSARGS
